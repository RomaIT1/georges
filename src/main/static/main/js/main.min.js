function App(t) { return { init: null, modules: {}, get: t => document.querySelector(t), getAll: t => document.querySelectorAll(t) } }
const app = App(),
   $body = app.get("body"),
   $wrapper = app.get(".wrapper");
app.modules.header = function(t) {
   const e = document.querySelectorAll("[data-nav-item-sub]"),
      r = document.querySelector("#menu-icon"),
      o = document.querySelector("#header");
   return { init() { e.forEach(t => { t.addEventListener("click", this.clickNavItem) }), r.addEventListener("click", this.menuIconClick), document.addEventListener("scroll", this.headerAnimate) }, clickNavItem() { this.classList.toggle("active") }, menuIconClick() { this.classList.toggle("active"), o.classList.toggle("show-menu"), $body.classList.toggle("frozen") }, headerAnimate() { scrollY > 100 ? o.classList.add("scroll") : o.classList.remove("scroll") } }
}, app.init = function(t) {
   ! function() {
      const t = document.querySelectorAll('a[href*="#"]');
      for (let e of t) e.addEventListener("click", (function(t) {
         t.preventDefault();
         const r = e.getAttribute("href").substring(1),
            o = document.getElementById(r);
         o && o.scrollIntoView({ behavior: "smooth", block: "start" })
      }))
   }()
}, app.modules.lazyLoading = function() {
   const t = document.querySelectorAll("img[data-src], source[data-srcset]"),
      e = document.body.clientHeight,
      r = [];

   function o(t, e) { t.el.setAttribute("" + e, t.el.getAttribute("data-" + e)), t.el.removeAttribute("data-" + e), r.splice(r.indexOf(t), 1) }

   function c() {
      r.forEach(t => {
         if (scrollY > t.value) {
            const e = t.el.getAttribute("srcset"),
               r = t.el.getAttribute("src");
            e ? o(t, "srcset") : r && o(t, "src")
         }
      }), r.length || window.removeEventListener("scroll", c)
   }
   return { init() {! function(t = [], r) { t.forEach(t => { r.push({ el: t, value: t.getBoundingClientRect().top - e }) }) }(t, r), c(), window.addEventListener("scroll", c) } }
}, app.modules.popup = function(t) {
   const e = document.querySelectorAll("[data-popup-init]"),
      r = document.querySelectorAll("[data-popup-open]");
   return {
      init() { r.forEach(t => { t.addEventListener("click", this._open) }), this._close() },
      _open() {
         for (let t = 0; t < e.length; t++)
            if (e[t].dataset.popupInit === this.dataset.popupOpen) { e[t].classList.add("show"), $body.classList.add("frozen"); break }
      },
      _close() { e.forEach(t => { t.querySelector("[data-popup-close]").addEventListener("click", e => { t.classList.remove("show"), $body.classList.remove("frozen") }) }) }
   }
}, app.init();
const header = app.modules.header(),
   popup = app.modules.popup();
header.init(), popup.init();